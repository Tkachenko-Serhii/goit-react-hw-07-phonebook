{"version":3,"sources":["components/ContactList/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contactSlice.js","components/Form/Form.jsx","redux/actions.js","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","createContact","mutation","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useCreateContactMutation","useDeleteContactMutation","Form","data","isLoading","id","onSubmit","e","preventDefault","currentTarget","elements","value","find","el","toLowerCase","alert","type","text","reset","className","s","form","autoComplete","label","pattern","title","required","input","button","disabled","actions","changeFilter","createAction","Filter","dispatch","useDispatch","stateFilter","useSelector","state","contacts","filter","onChange","target","ContactItem","isDeleting","item","contact","onClick","LoaderFnc","loader","color","height","width","timeout","ContactList","filteredContacts","isFetching","includes","map","App","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","setupListeners","defaultModules","set","PNotifyMobile","require","defaults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3789c183.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2warn\",\"contact\":\"ContactItem_contact__2Ium8\",\"button\":\"ContactItem_button__1gtqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1O_8d\",\"input\":\"Filter_input__1oQsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2pgFE\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: \"contactApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://619952f49022ea0017a7ae2a.mockapi.io/api/v1\",\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query({ name, number }) {\r\n        return {\r\n          url: \"/contacts\",\r\n          method: \"POST\",\r\n          body: {\r\n            name,\r\n            number,\r\n          },\r\n        };\r\n      },\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query(contactId) {\r\n        return {\r\n          url: `contacts/${contactId}`,\r\n          method: \"DELETE\",\r\n        };\r\n      },\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useCreateContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactApi;\r\n","import {\r\n  useFetchContactsQuery,\r\n  useCreateContactMutation,\r\n} from \"redux/contactSlice\";\r\nimport { alert } from \"@pnotify/core\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form() {\r\n  const { data } = useFetchContactsQuery();\r\n  const [createContact, { isLoading }] = useCreateContactMutation();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = e.currentTarget.elements.name.value;\r\n    const number = e.currentTarget.elements.number.value;\r\n    if (data.find((el) => el.name.toLowerCase() === name.toLowerCase())) {\r\n      alert({\r\n        type: \"warning\",\r\n        text: `Contact ${name} is already in your contacts!`,\r\n      });\r\n      return;\r\n    } else {\r\n      createContact({ name, number });\r\n      alert({\r\n        type: \"success\",\r\n        text: `Contact ${name} is saved!`,\r\n      });\r\n    }\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  return (\r\n    <form id='form' onSubmit={onSubmit} className={s.form} autoComplete='off'>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Name</span>\r\n        <input\r\n          type='text'\r\n          name='name'\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        <span className={s.text}>Number</span>\r\n        <input\r\n          type='tel'\r\n          name='number'\r\n          pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n          title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n          className={s.input}\r\n          required\r\n        />\r\n      </label>\r\n      <button type='submit' className={s.button} disabled={isLoading}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nconst actions = { changeFilter };\r\n\r\nexport default actions;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport actions from \"redux/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const stateFilter = useSelector((state) => state.contacts.filter);\r\n  const onChangeFilter = (e) => dispatch(actions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <p className={s.text}>Find contacts by name</p>\r\n      <input\r\n        type='text'\r\n        name='Find contact'\r\n        onChange={onChangeFilter}\r\n        value={stateFilter}\r\n        className={s.input}\r\n        autoComplete='off'\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onFilterChange: PropTypes.func,\r\n};\r\n","import { useDeleteContactMutation } from \"redux/contactSlice\";\r\nimport { alert } from \"@pnotify/core\";\r\n\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ id, name, number }) {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  isDeleting &&\r\n    alert({\r\n      type: \"warning\",\r\n      text: `Contact ${name} was deleted!`,\r\n    });\r\n\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.contact}>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.button}\r\n        onClick={(e) => deleteContact(id)}\r\n        disabled={isDeleting}\r\n      >\r\n        {isDeleting ? \"Deleting...\" : \"Delete\"}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nexport default function LoaderFnc() {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type='ThreeDots'\r\n        color='#000000'\r\n        height={50}\r\n        width={50}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchContactsQuery } from \"redux/contactSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport Loader from \"components/Loader\";\r\n\r\nexport default function ContactList() {\r\n  let filteredContacts;\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n\r\n  const filter = useSelector((state) => state.contacts.filter.toLowerCase());\r\n\r\n  if (data) {\r\n    filteredContacts = data.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isFetching && <Loader />}\r\n      {filteredContacts && (\r\n        <ul>\r\n          {filteredContacts.map((contact) => (\r\n            <ContactItem key={contact.id} {...contact} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n};\r\n","import Form from \"components/Form\";\r\nimport Filter from \"components/Filter\";\r\nimport ContactList from \"components/ContactList\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='container'>\r\n      <div className='addForm'>\r\n        <h1 className='title'>Phonebook</h1>\r\n        <Form />\r\n      </div>\r\n      <h2 className='title'>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport actions from \"./actions\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport contactsReducer from \"./reducer\";\r\nimport { contactApi } from \"./contactSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactApi.middleware,\r\n  ],\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport { defaultModules } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport * as PNotifyMobile from \"@pnotify/mobile\";\nimport \"@pnotify/mobile/dist/PNotifyMobile.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\ndefaultModules.set(PNotifyMobile, {});\nconst { defaults } = require(\"@pnotify/core\");\n\ndefaults.width = \"400px\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__3ynJu\",\"text\":\"Form_text__2REK3\",\"button\":\"Form_button__3BaCt\",\"input\":\"Form_input__1NnRK\"};"],"sourceRoot":""}